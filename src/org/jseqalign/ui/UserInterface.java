/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.jseqalign.ui;

import org.jseqalign.alignment.SequenceAlignmentAlgorithm;
import org.jseqalign.alignment.NeedlemanWunschAlgorithm;
import org.jseqalign.alignment.SmithWatermanAlgorithm;
import org.jseqalign.structure.SequenceAlignment;
import org.jseqalign.structure.SubstitutionMatrixScoringRule;
import org.jseqalign.structure.ScoringRule;
import org.jseqalign.structure.GenericScoringRule;
import org.jseqalign.exceptions.InvalidMatrixException;
import org.jseqalign.exceptions.InvalidScoringRuleException;
import org.jseqalign.exceptions.InvalidSequenceException;
import java.awt.Desktop;
import java.awt.Toolkit;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Murilo Silva Farias
 */
public class UserInterface extends javax.swing.JFrame {

  private boolean isOutputInFile, perfil;
  private SequenceAlignment alignment;
  private final SequenceAlignmentAlgorithm[] SEQUENCE_ALIGNMENT_ALGORITHMS;
  private final String JAVADOC_FILE_STRING = "javadoc/index.html";

  /**
   * Cria um novo form
   */
  public UserInterface() {
    this.SEQUENCE_ALIGNMENT_ALGORITHMS = new SequenceAlignmentAlgorithm[]{new NeedlemanWunschAlgorithm(), new SmithWatermanAlgorithm()};
    initComponents();
  }

  /**
   * Este método é chamado de dentro do contrutor para fazer a inicialização dos
   * campos do form principal. WARNING: Do NOT modify this code. The content of
   * this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupOutput = new javax.swing.ButtonGroup();
        buttonGroupScore = new javax.swing.ButtonGroup();
        jFileChooserOpenFile = new javax.swing.JFileChooser();
        jFileChooserSaveFile = new javax.swing.JFileChooser();
        jPanelGeneral = new javax.swing.JPanel();
        jPanelInput = new javax.swing.JPanel();
        jLabelSeq1 = new javax.swing.JLabel();
        jTextFieldSeq1 = new javax.swing.JTextField();
        jButtonSeq1 = new javax.swing.JButton();
        jLabelSeq2 = new javax.swing.JLabel();
        jTextFieldSeq2 = new javax.swing.JTextField();
        jButtonSeq2 = new javax.swing.JButton();
        jPanelScoringRule = new javax.swing.JPanel();
        jTextFieldMatch = new javax.swing.JTextField();
        jLabelMatch = new javax.swing.JLabel();
        jLabelMismatch = new javax.swing.JLabel();
        jTextFieldMismatch = new javax.swing.JTextField();
        jLabelGap = new javax.swing.JLabel();
        jTextFieldGap = new javax.swing.JTextField();
        jTextFieldSubstitutionMatrix = new javax.swing.JTextField();
        jButtonSubstitutionMatrix = new javax.swing.JButton();
        jRadioButtonBasicScoringRule = new javax.swing.JRadioButton();
        jRadioButtonSubstitutionMatrix = new javax.swing.JRadioButton();
        jPanelAlignmentAlgorithm = new javax.swing.JPanel();
        jComboBoxAlignmentAlgorithm = new javax.swing.JComboBox();
        jButtonRunAlgorithm = new javax.swing.JButton();
        jPanelAlignmentOutput = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaAlignmentOutput = new javax.swing.JTextArea();
        jPanelAlignmentLog = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaAlignmentLog = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuItemNew = new javax.swing.JMenuItem();
        jMenuItemSaveResult = new javax.swing.JMenuItem();
        jMenuItemExit = new javax.swing.JMenuItem();
        jMenuHelp = new javax.swing.JMenu();
        jMenuItemOpenJavadoc = new javax.swing.JMenuItem();
        jMenuItemAbout = new javax.swing.JMenuItem();

        jFileChooserOpenFile.setApproveButtonText("Open");
        jFileChooserOpenFile.setApproveButtonToolTipText("Open File");
        jFileChooserOpenFile.setDialogTitle("Open File");

        jFileChooserSaveFile.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        jFileChooserSaveFile.setApproveButtonText("Save");
        jFileChooserSaveFile.setApproveButtonToolTipText("Save File");
        jFileChooserSaveFile.setDialogTitle("Save File");
        jFileChooserSaveFile.setSelectedFile(new java.io.File("C:\\Program Files\\NetBeans 8.2\\result.txt"));
        jFileChooserSaveFile.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sequence alignments");
        setName("frameMain"); // NOI18N

        jPanelGeneral.setPreferredSize(new java.awt.Dimension(960, 600));

        jPanelInput.setBorder(javax.swing.BorderFactory.createTitledBorder("Input Sequences"));
        jPanelInput.setPreferredSize(new java.awt.Dimension(310, 23));

        jLabelSeq1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelSeq1.setText("Sequence #1:");

        jTextFieldSeq1.setEditable(false);

        jButtonSeq1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/jseqalign/ui/images/folder-open-document.png"))); // NOI18N
        jButtonSeq1.setText("Open...");
        jButtonSeq1.setToolTipText("");
        jButtonSeq1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSeq1ActionPerformed(evt);
            }
        });

        jLabelSeq2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelSeq2.setText("Sequence #2:");

        jTextFieldSeq2.setEditable(false);

        jButtonSeq2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/jseqalign/ui/images/folder-open-document.png"))); // NOI18N
        jButtonSeq2.setText("Open...");
        jButtonSeq2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSeq2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelInputLayout = new javax.swing.GroupLayout(jPanelInput);
        jPanelInput.setLayout(jPanelInputLayout);
        jPanelInputLayout.setHorizontalGroup(
            jPanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInputLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelInputLayout.createSequentialGroup()
                        .addComponent(jTextFieldSeq1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSeq1))
                    .addGroup(jPanelInputLayout.createSequentialGroup()
                        .addGroup(jPanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelInputLayout.createSequentialGroup()
                                .addComponent(jLabelSeq1)
                                .addGap(0, 261, Short.MAX_VALUE))
                            .addComponent(jTextFieldSeq2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSeq2))
                    .addGroup(jPanelInputLayout.createSequentialGroup()
                        .addComponent(jLabelSeq2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelInputLayout.setVerticalGroup(
            jPanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInputLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelSeq1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldSeq1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSeq1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelSeq2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldSeq2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSeq2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelScoringRule.setBorder(javax.swing.BorderFactory.createTitledBorder("Scoring Rule"));
        jPanelScoringRule.setPreferredSize(new java.awt.Dimension(310, 23));

        jTextFieldMatch.setText("1");
        jTextFieldMatch.setMinimumSize(new java.awt.Dimension(40, 20));
        jTextFieldMatch.setName(""); // NOI18N
        jTextFieldMatch.setPreferredSize(new java.awt.Dimension(40, 20));
        jTextFieldMatch.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextFieldMatchCaretUpdate(evt);
            }
        });

        jLabelMatch.setText("Match:");

        jLabelMismatch.setText("Mismatch:");

        jTextFieldMismatch.setText("-1");
        jTextFieldMismatch.setMinimumSize(new java.awt.Dimension(40, 20));
        jTextFieldMismatch.setName(""); // NOI18N
        jTextFieldMismatch.setPreferredSize(new java.awt.Dimension(40, 20));
        jTextFieldMismatch.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextFieldMismatchCaretUpdate(evt);
            }
        });

        jLabelGap.setText("Gap:");

        jTextFieldGap.setText("-1");
        jTextFieldGap.setToolTipText("");
        jTextFieldGap.setMinimumSize(new java.awt.Dimension(40, 20));
        jTextFieldGap.setName(""); // NOI18N
        jTextFieldGap.setPreferredSize(new java.awt.Dimension(40, 20));
        jTextFieldGap.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextFieldGapCaretUpdate(evt);
            }
        });

        jTextFieldSubstitutionMatrix.setEditable(false);
        jTextFieldSubstitutionMatrix.setEnabled(false);
        jTextFieldSubstitutionMatrix.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextFieldSubstitutionMatrixCaretUpdate(evt);
            }
        });

        jButtonSubstitutionMatrix.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/jseqalign/ui/images/folder-open-table.png"))); // NOI18N
        jButtonSubstitutionMatrix.setText("Open...");
        jButtonSubstitutionMatrix.setEnabled(false);
        jButtonSubstitutionMatrix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSubstitutionMatrixActionPerformed(evt);
            }
        });

        buttonGroupScore.add(jRadioButtonBasicScoringRule);
        jRadioButtonBasicScoringRule.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioButtonBasicScoringRule.setSelected(true);
        jRadioButtonBasicScoringRule.setText("Basic Scoring Rule");
        jRadioButtonBasicScoringRule.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRadioButtonBasicScoringRuleStateChanged(evt);
            }
        });

        buttonGroupScore.add(jRadioButtonSubstitutionMatrix);
        jRadioButtonSubstitutionMatrix.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioButtonSubstitutionMatrix.setText("Substitution Matrix");
        jRadioButtonSubstitutionMatrix.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRadioButtonSubstitutionMatrixStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanelScoringRuleLayout = new javax.swing.GroupLayout(jPanelScoringRule);
        jPanelScoringRule.setLayout(jPanelScoringRuleLayout);
        jPanelScoringRuleLayout.setHorizontalGroup(
            jPanelScoringRuleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelScoringRuleLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelScoringRuleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelScoringRuleLayout.createSequentialGroup()
                        .addGroup(jPanelScoringRuleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButtonSubstitutionMatrix)
                            .addComponent(jRadioButtonBasicScoringRule)
                            .addGroup(jPanelScoringRuleLayout.createSequentialGroup()
                                .addComponent(jLabelMatch)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldMatch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelMismatch)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldMismatch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelGap)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldGap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 163, Short.MAX_VALUE))
                    .addGroup(jPanelScoringRuleLayout.createSequentialGroup()
                        .addComponent(jTextFieldSubstitutionMatrix)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSubstitutionMatrix)))
                .addContainerGap())
        );
        jPanelScoringRuleLayout.setVerticalGroup(
            jPanelScoringRuleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelScoringRuleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButtonBasicScoringRule)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelScoringRuleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldMatch, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelMatch)
                    .addComponent(jLabelMismatch)
                    .addComponent(jTextFieldMismatch, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelGap)
                    .addComponent(jTextFieldGap, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButtonSubstitutionMatrix)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelScoringRuleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldSubstitutionMatrix, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSubstitutionMatrix, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelAlignmentAlgorithm.setBorder(javax.swing.BorderFactory.createTitledBorder("Sequence Alignment Algorithm"));

        jComboBoxAlignmentAlgorithm.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBoxAlignmentAlgorithm.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Needleman-Wunsch - GLOBAL", "Smith-Waterman - LOCAL" }));

        jButtonRunAlgorithm.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButtonRunAlgorithm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/jseqalign/ui/images/tick-circle.png"))); // NOI18N
        jButtonRunAlgorithm.setText("Compute Alignment");
        jButtonRunAlgorithm.setEnabled(false);
        jButtonRunAlgorithm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRunAlgorithmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelAlignmentAlgorithmLayout = new javax.swing.GroupLayout(jPanelAlignmentAlgorithm);
        jPanelAlignmentAlgorithm.setLayout(jPanelAlignmentAlgorithmLayout);
        jPanelAlignmentAlgorithmLayout.setHorizontalGroup(
            jPanelAlignmentAlgorithmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAlignmentAlgorithmLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBoxAlignmentAlgorithm, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonRunAlgorithm)
                .addContainerGap())
        );
        jPanelAlignmentAlgorithmLayout.setVerticalGroup(
            jPanelAlignmentAlgorithmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAlignmentAlgorithmLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelAlignmentAlgorithmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxAlignmentAlgorithm, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonRunAlgorithm, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelAlignmentOutput.setBorder(javax.swing.BorderFactory.createTitledBorder("Sequence Alignment Output"));

        jTextAreaAlignmentOutput.setEditable(false);
        jTextAreaAlignmentOutput.setBackground(new java.awt.Color(255, 255, 204));
        jTextAreaAlignmentOutput.setColumns(20);
        jTextAreaAlignmentOutput.setRows(5);
        jScrollPane2.setViewportView(jTextAreaAlignmentOutput);

        javax.swing.GroupLayout jPanelAlignmentOutputLayout = new javax.swing.GroupLayout(jPanelAlignmentOutput);
        jPanelAlignmentOutput.setLayout(jPanelAlignmentOutputLayout);
        jPanelAlignmentOutputLayout.setHorizontalGroup(
            jPanelAlignmentOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAlignmentOutputLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanelAlignmentOutputLayout.setVerticalGroup(
            jPanelAlignmentOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAlignmentOutputLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanelAlignmentLog.setBorder(javax.swing.BorderFactory.createTitledBorder("Computation Log"));

        jTextAreaAlignmentLog.setEditable(false);
        jTextAreaAlignmentLog.setColumns(20);
        jTextAreaAlignmentLog.setRows(5);
        jScrollPane1.setViewportView(jTextAreaAlignmentLog);

        javax.swing.GroupLayout jPanelAlignmentLogLayout = new javax.swing.GroupLayout(jPanelAlignmentLog);
        jPanelAlignmentLog.setLayout(jPanelAlignmentLogLayout);
        jPanelAlignmentLogLayout.setHorizontalGroup(
            jPanelAlignmentLogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAlignmentLogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 908, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelAlignmentLogLayout.setVerticalGroup(
            jPanelAlignmentLogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAlignmentLogLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelGeneralLayout = new javax.swing.GroupLayout(jPanelGeneral);
        jPanelGeneral.setLayout(jPanelGeneralLayout);
        jPanelGeneralLayout.setHorizontalGroup(
            jPanelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelGeneralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelGeneralLayout.createSequentialGroup()
                        .addComponent(jPanelInput, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelScoringRule, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE))
                    .addComponent(jPanelAlignmentAlgorithm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelAlignmentOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelAlignmentLog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelGeneralLayout.setVerticalGroup(
            jPanelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelGeneralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelInput, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelScoringRule, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelAlignmentAlgorithm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelAlignmentOutput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelAlignmentLog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanelInput.getAccessibleContext().setAccessibleName("Input");
        jPanelScoringRule.getAccessibleContext().setAccessibleName("Pontuação");

        jMenuFile.setText("File");

        jMenuItemNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/jseqalign/ui/images/document-plus.png"))); // NOI18N
        jMenuItemNew.setText("New Alignment");
        jMenuItemNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNewActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemNew);

        jMenuItemSaveResult.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemSaveResult.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/jseqalign/ui/images/disks.png"))); // NOI18N
        jMenuItemSaveResult.setText("Save Alignment Result...");
        jMenuItemSaveResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSaveResultActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemSaveResult);

        jMenuItemExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemExit.setText("Exit");
        jMenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemExit);

        jMenuBar1.add(jMenuFile);

        jMenuHelp.setText("Help");

        jMenuItemOpenJavadoc.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jMenuItemOpenJavadoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/jseqalign/ui/images/question.png"))); // NOI18N
        jMenuItemOpenJavadoc.setText("Open Javadoc");
        jMenuItemOpenJavadoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemOpenJavadocActionPerformed(evt);
            }
        });
        jMenuHelp.add(jMenuItemOpenJavadoc);

        jMenuItemAbout.setText("About");
        jMenuItemAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAboutActionPerformed(evt);
            }
        });
        jMenuHelp.add(jMenuItemAbout);

        jMenuBar1.add(jMenuHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, 596, Short.MAX_VALUE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(996, 678));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSubstitutionMatrixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSubstitutionMatrixActionPerformed
      int c = jFileChooserOpenFile.showOpenDialog(this);
      if (c != JFileChooser.APPROVE_OPTION) {
        return;
      }
      jTextFieldSubstitutionMatrix.setText(jFileChooserOpenFile.getSelectedFile().getPath());
      checkComputationRequirements();
    }//GEN-LAST:event_jButtonSubstitutionMatrixActionPerformed

    private void jButtonSeq1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSeq1ActionPerformed
      int c = jFileChooserOpenFile.showOpenDialog(this);
      if (c != JFileChooser.APPROVE_OPTION) {
        return;
      }
      jTextFieldSeq1.setText(jFileChooserOpenFile.getSelectedFile().getPath());
      checkComputationRequirements();
    }//GEN-LAST:event_jButtonSeq1ActionPerformed

    @SuppressWarnings("empty-statement")
    private void jButtonRunAlgorithmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRunAlgorithmActionPerformed
      ScoringRule regraDePontuacao;
      //AlinhamentoDeSequencias alignment;
      FileReader arquivoSeq1, arquivoSeq2, arquivoMatriz;

      String nomeArquivoSeq1, nomeArquivoSeq2;
      String nomeArquivoMatriz, nomeArquivoSaida, mensagem;
      int algoritmoSelecionado, match, mismatch, gap;
      long tempoInicio, tempoDecorrido;

      perfilStateChanged();
      algoritmoSelecionado = jComboBoxAlignmentAlgorithm.getSelectedIndex();
      this.alignment = null;
      alignment = null;
      jTextAreaAlignmentOutput.setText("");

      // Define o método que será usado para definir a pontuação do alignment
      if (perfil) {
        jTextAreaAlignmentLog.setText("Criando regra de pontuação com os parâmetros: match=" + jTextFieldMatch.getText() + ", mismatch=" + jTextFieldMismatch.getText() + ", gap=" + jTextFieldGap.getText() + " ... ");
        jTextAreaAlignmentLog.update(jTextAreaAlignmentLog.getGraphics());
        try {
          match = Integer.parseInt(jTextFieldMatch.getText());
          mismatch = Integer.parseInt(jTextFieldMismatch.getText());
          gap = Integer.parseInt(jTextFieldGap.getText());

          regraDePontuacao = new GenericScoringRule(match, mismatch, gap);
          SEQUENCE_ALIGNMENT_ALGORITHMS[algoritmoSelecionado].setScoringRule(regraDePontuacao);
          jTextAreaAlignmentLog.append("OK");
        } catch (NumberFormatException e) {
          mensagem = "Parâmetros de pontuação inválidos.";
          jTextAreaAlignmentLog.append("\n" + mensagem);
          showErrorMessage(mensagem);
          return;
        }
        jTextAreaAlignmentLog.update(jTextAreaAlignmentLog.getGraphics());
      } else {
        nomeArquivoMatriz = jTextFieldSubstitutionMatrix.getText();
        jTextAreaAlignmentLog.setText("Arquivo de matriz de substituição: " + nomeArquivoMatriz);
        jTextAreaAlignmentLog.append("\nCarregando arquivo de matriz... ");
        jTextAreaAlignmentLog.update(jTextAreaAlignmentLog.getGraphics());
        try {
          arquivoMatriz = new FileReader(nomeArquivoMatriz);
        } catch (FileNotFoundException e) {
          mensagem = "Arquivo \"" + nomeArquivoMatriz + "\" não encontrado.";
          jTextAreaAlignmentLog.append("\n" + mensagem);
          showErrorMessage(mensagem);
          return;
        }

        try {
          try {
            regraDePontuacao = new SubstitutionMatrixScoringRule(arquivoMatriz);
            SEQUENCE_ALIGNMENT_ALGORITHMS[algoritmoSelecionado].setScoringRule(regraDePontuacao);
            jTextAreaAlignmentLog.append("OK");
          } catch (InvalidMatrixException e) {
            arquivoMatriz.close();
            mensagem = "Arquivo de matriz de substituição inválido \"" + nomeArquivoMatriz + "\".";
            jTextAreaAlignmentLog.append("\n" + mensagem);
            showErrorMessage(mensagem);
            return;
          }
          arquivoMatriz.close();
        } catch (IOException e) {
          mensagem = "Erro ao ler o arquivo.";
          jTextAreaAlignmentLog.append("\n" + mensagem);
          showErrorMessage(mensagem);
          return;
        }
        jTextAreaAlignmentLog.update(jTextAreaAlignmentLog.getGraphics());
      }

      jTextAreaAlignmentLog.append("\n\nArquivo de sequencia 1: " + jTextFieldSeq1.getText());
      jTextAreaAlignmentLog.append("\nArquivo de sequencia 2: " + jTextFieldSeq2.getText());

      // Carrega o conteúdo dos arquivos de sequências para a memória
      jTextAreaAlignmentLog.append("\nCarregando sequências... ");
      jTextAreaAlignmentLog.update(jTextAreaAlignmentLog.getGraphics());

      nomeArquivoSeq1 = jTextFieldSeq1.getText();
      try {
        //arquivoSeq1 = null;
        arquivoSeq1 = new FileReader(nomeArquivoSeq1);
      } catch (FileNotFoundException e) {
        mensagem = "Arquivo \"" + nomeArquivoSeq1 + "\" não encontrado.";
        jTextAreaAlignmentLog.append("\n" + mensagem);
        showErrorMessage(mensagem);
        return;
      }

      nomeArquivoSeq2 = jTextFieldSeq2.getText();
      try {
        arquivoSeq2 = new FileReader(nomeArquivoSeq2);
      } catch (FileNotFoundException e) {
        mensagem = "Arquivo \"" + nomeArquivoSeq2 + "\" não encontrado.";
        jTextAreaAlignmentLog.append("\n" + mensagem);
        showErrorMessage(mensagem);
        return;
      }

      try {
        try {
          tempoInicio = System.currentTimeMillis();
          SEQUENCE_ALIGNMENT_ALGORITHMS[algoritmoSelecionado].loadSequences(arquivoSeq1, arquivoSeq2);
          tempoDecorrido = System.currentTimeMillis() - tempoInicio;
          jTextAreaAlignmentLog.append("OK");
          jTextAreaAlignmentLog.append("\n[ Tempo decorrido: " + tempoDecorrido + " milisegundos ]");

        } catch (InvalidSequenceException e) {
          arquivoSeq1.close();
          arquivoSeq2.close();
          mensagem = "Arquivos de sequência inválidos.";
          jTextAreaAlignmentLog.append("\n" + mensagem);
          showErrorMessage(mensagem);
          return;
        }
        arquivoSeq1.close();
        arquivoSeq2.close();
      } catch (IOException e) {
        mensagem = "Erro na leitura dos arquivos de sequências.";
        jTextAreaAlignmentLog.append("\n" + mensagem);
        showErrorMessage(mensagem);
        return;
      }
      jTextAreaAlignmentLog.update(jTextAreaAlignmentLog.getGraphics());

      // Chama os algoritmos necessários par ao processameno do alignment
      jTextAreaAlignmentLog.append("\n\nExecutando " + jComboBoxAlignmentAlgorithm.getSelectedItem() + "... ");
      jTextAreaAlignmentLog.update(jTextAreaAlignmentLog.getGraphics());
      try {
        tempoInicio = System.currentTimeMillis();
        alignment = SEQUENCE_ALIGNMENT_ALGORITHMS[algoritmoSelecionado].getSequenceAlignment();
        tempoDecorrido = System.currentTimeMillis() - tempoInicio;
        jTextAreaAlignmentLog.append("OK");
        jTextAreaAlignmentLog.append("\n[ Tempo decorrido: " + tempoDecorrido + " milliseconds ]");
      } catch (InvalidScoringRuleException e) {
        mensagem = "Matriz de substituição não é compatível com as sequências carregadas.";
        jTextAreaAlignmentLog.append("\n" + mensagem);
        showErrorMessage(mensagem);
        return;
      } catch (OutOfMemoryError e) {
        mensagem = "Memória insuficiente para realizar o alinhamento das sequências carregadas";
        jTextAreaAlignmentLog.append("\n" + mensagem);
        showErrorMessage(mensagem);
        return;
      }
      jTextAreaAlignmentLog.update(jTextAreaAlignmentLog.getGraphics());

      //this.alignment = alignment;
      jTextAreaAlignmentOutput.setText(alignment.toString());
    }//GEN-LAST:event_jButtonRunAlgorithmActionPerformed

    private void jButtonSeq2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSeq2ActionPerformed
      int c = jFileChooserOpenFile.showOpenDialog(this);

      if (c != JFileChooser.APPROVE_OPTION) {
        return;
      }

      jTextFieldSeq2.setText(jFileChooserOpenFile.getSelectedFile().getPath());
      checkComputationRequirements();
    }//GEN-LAST:event_jButtonSeq2ActionPerformed

    private void jRadioButtonBasicScoringRuleStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRadioButtonBasicScoringRuleStateChanged
      perfilStateChanged();
    }//GEN-LAST:event_jRadioButtonBasicScoringRuleStateChanged

    private void jTextFieldMatchCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextFieldMatchCaretUpdate
      checkComputationRequirements();
    }//GEN-LAST:event_jTextFieldMatchCaretUpdate

    private void jTextFieldMismatchCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextFieldMismatchCaretUpdate
      checkComputationRequirements();
    }//GEN-LAST:event_jTextFieldMismatchCaretUpdate

    private void jTextFieldGapCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextFieldGapCaretUpdate
      checkComputationRequirements();
    }//GEN-LAST:event_jTextFieldGapCaretUpdate

    private void jTextFieldSubstitutionMatrixCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextFieldSubstitutionMatrixCaretUpdate
      checkComputationRequirements();
    }//GEN-LAST:event_jTextFieldSubstitutionMatrixCaretUpdate

    private void jMenuItemNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNewActionPerformed
      cleanFields();
    }//GEN-LAST:event_jMenuItemNewActionPerformed

    private void jMenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitActionPerformed
      System.exit(0);
    }//GEN-LAST:event_jMenuItemExitActionPerformed

  @SuppressWarnings("null")
    private void jMenuItemOpenJavadocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemOpenJavadocActionPerformed
      Desktop desktop = null;
      if (Desktop.isDesktopSupported()) {
        desktop = Desktop.getDesktop();
      }
      if (desktop.isSupported(Desktop.Action.OPEN)) {
        File javadocFile;
        try {
          javadocFile = new File(JAVADOC_FILE_STRING);
          desktop.open(javadocFile);
        } catch (IOException e) {
          //e.printStackTrace();
        }
      }
    }//GEN-LAST:event_jMenuItemOpenJavadocActionPerformed

    private void jMenuItemAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAboutActionPerformed
      new About().setVisible(true);
    }//GEN-LAST:event_jMenuItemAboutActionPerformed

    private void jRadioButtonSubstitutionMatrixStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRadioButtonSubstitutionMatrixStateChanged
      perfilStateChanged();
    }//GEN-LAST:event_jRadioButtonSubstitutionMatrixStateChanged

    private void jMenuItemSaveResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSaveResultActionPerformed
      BufferedWriter arquivoSaida;
      String nomeArquivoSaida, mensagem;

      nomeArquivoSaida = "";

      try {
        if (alignment != null) {
          int c = jFileChooserSaveFile.showOpenDialog(this);
          if (c != JFileChooser.APPROVE_OPTION) {
            return;
          }

          nomeArquivoSaida = jFileChooserSaveFile.getSelectedFile().getPath();
          jTextAreaAlignmentLog.append("\n\nSalvando alinhamento... ");
          jTextAreaAlignmentLog.update(jTextAreaAlignmentLog.getGraphics());

          int length = alignment.getFirstSequenceWithGaps().length();
          arquivoSaida = new BufferedWriter(new FileWriter(nomeArquivoSaida));
          arquivoSaida.write(alignment.getFirstSequenceWithGaps(), 0, length);
          arquivoSaida.newLine();
          arquivoSaida.write(alignment.getAlignmentDescriptiveLine(), 0, length);
          arquivoSaida.newLine();
          arquivoSaida.write(alignment.getSecondSequenceWithGaps(), 0, length);
          arquivoSaida.newLine();
          String tmp = "Pontuação apurada para o alinhamento: " + alignment.getScore();
          arquivoSaida.write(tmp, 0, tmp.length());
          arquivoSaida.close();

          jTextAreaAlignmentLog.append("OK");
          jTextAreaAlignmentLog.update(jTextAreaAlignmentLog.getGraphics());
        } else {

          jTextAreaAlignmentLog.append("Execute um alinhamento antes de tentar salvar.");
          jTextAreaAlignmentLog.update(jTextAreaAlignmentLog.getGraphics());
        }
      } catch (IOException e) {
        mensagem = "Erro ao gravar o arquivo \"" + nomeArquivoSaida + "\".";
        jTextAreaAlignmentLog.append("\n" + mensagem);
        showErrorMessage(mensagem);
      }

    }//GEN-LAST:event_jMenuItemSaveResultActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Windows".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      @Override
      public void run() {
        new UserInterface().setVisible(true);
      }
    });
  }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupOutput;
    private javax.swing.ButtonGroup buttonGroupScore;
    private javax.swing.JButton jButtonRunAlgorithm;
    private javax.swing.JButton jButtonSeq1;
    private javax.swing.JButton jButtonSeq2;
    private javax.swing.JButton jButtonSubstitutionMatrix;
    private javax.swing.JComboBox jComboBoxAlignmentAlgorithm;
    private javax.swing.JFileChooser jFileChooserOpenFile;
    private javax.swing.JFileChooser jFileChooserSaveFile;
    private javax.swing.JLabel jLabelGap;
    private javax.swing.JLabel jLabelMatch;
    private javax.swing.JLabel jLabelMismatch;
    private javax.swing.JLabel jLabelSeq1;
    private javax.swing.JLabel jLabelSeq2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenu jMenuHelp;
    private javax.swing.JMenuItem jMenuItemAbout;
    private javax.swing.JMenuItem jMenuItemExit;
    private javax.swing.JMenuItem jMenuItemNew;
    private javax.swing.JMenuItem jMenuItemOpenJavadoc;
    private javax.swing.JMenuItem jMenuItemSaveResult;
    private javax.swing.JPanel jPanelAlignmentAlgorithm;
    private javax.swing.JPanel jPanelAlignmentLog;
    private javax.swing.JPanel jPanelAlignmentOutput;
    private javax.swing.JPanel jPanelGeneral;
    private javax.swing.JPanel jPanelInput;
    private javax.swing.JPanel jPanelScoringRule;
    private javax.swing.JRadioButton jRadioButtonBasicScoringRule;
    private javax.swing.JRadioButton jRadioButtonSubstitutionMatrix;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextAreaAlignmentLog;
    private javax.swing.JTextArea jTextAreaAlignmentOutput;
    private javax.swing.JTextField jTextFieldGap;
    private javax.swing.JTextField jTextFieldMatch;
    private javax.swing.JTextField jTextFieldMismatch;
    private javax.swing.JTextField jTextFieldSeq1;
    private javax.swing.JTextField jTextFieldSeq2;
    private javax.swing.JTextField jTextFieldSubstitutionMatrix;
    // End of variables declaration//GEN-END:variables

  private void checkComputationRequirements() {
    boolean run = true;

    if (jTextFieldSeq1.getText().length() == 0 || jTextFieldSeq2.getText().length() == 0) {
      run = false;
    } else {
      if (jRadioButtonSubstitutionMatrix.isSelected()) {
        if (jTextFieldSubstitutionMatrix.getText().length() == 0) {
          run = false;
        }
      } else {
        if (jTextFieldMatch.getText().length() == 0
                || jTextFieldMismatch.getText().length() == 0
                || jTextFieldGap.getText().length() == 0) {
          run = false;
        }
      }

    }

    if ((jButtonRunAlgorithm.isEnabled() && !run) || (!jButtonRunAlgorithm.isEnabled() && run)) {
      jButtonRunAlgorithm.setEnabled(run);
    }
  }

  private void showErrorMessage(String message) {
    JOptionPane.showMessageDialog(this, message, "Erro", JOptionPane.ERROR_MESSAGE);
  }

  private void cleanFields() {
    jTextFieldMatch.setText("1");     // Define a pontuação padrão para MATCH
    jTextFieldMismatch.setText("-1"); // Define a pontuação padrão para MISMATCH
    jTextFieldGap.setText("-1");      // Define a pontuação padrão para GAP
    jTextFieldSubstitutionMatrix.setText(null);
    jTextFieldSeq1.setText(null);
    jTextFieldSeq2.setText(null);
    jTextAreaAlignmentOutput.setText(null);
    jTextAreaAlignmentLog.setText(null);
    jRadioButtonBasicScoringRule.setSelected(true);
    alignment = null;
  }

  private void perfilStateChanged() {
    perfil = jRadioButtonBasicScoringRule.isSelected();
    jLabelMatch.setEnabled(perfil);
    jTextFieldMatch.setEnabled(perfil);
    jLabelMismatch.setEnabled(perfil);
    jTextFieldMismatch.setEnabled(perfil);
    jLabelGap.setEnabled(perfil);
    jTextFieldGap.setEnabled(perfil);
    jTextFieldSubstitutionMatrix.setEnabled(!perfil);
    jButtonSubstitutionMatrix.setEnabled(!perfil);
    checkComputationRequirements();
  }
}
